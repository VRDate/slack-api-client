openapi: 3.0.0
servers:
  - url: 'https://slack.com/api/'
info:
  description: >-
    This is OpenAPI specification for Slack API.
  version: 0.0.1
  title: OpenAPI specification for Slack API
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Slack
    description: Slack messaging platform
paths:
  /api.test:
    post:
      tags:
        - Test
      summary: Checks API calling code.
      description: 'Tier 4: This method helps you test your calling code.'
      operationId: apiTest
      parameters:
        - name: error
          in: query
          description: Error response to return
          required: false
          schema:
            type: string
        - name: foo
          in: query
          description: Example property to return
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTestResponse'
      requestBody:
        $ref: '#/components/requestBodies/EmptyBody'

externalDocs:
  description: Find out more about Slack API
  url: 'https://api.slack.com/'
components:
  requestBodies:
    EmptyBody:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schema/EmptyBody'
        application/json:
          schema:
            $ref: '#/components/schema/EmptyBody'
      description: An empty object
      required: false
  schemas:
    ApiTestResponse:
      title:
      description:
      type: object
      required:
        - ok
      properties:
        ok:
          type: boolean
        error:
          type: string
        args:
          $ref: '#/components/schema/ApiTestArgsResponse'
    ApiTestArgsResponse:
      title: Response object for api.test endpoint
      description:
      type: object
      properties:
        error:
          type: string
        foo:
          type: string
    EmptyBody:
      title: Empty request body object
      description: Empty request body object
      type: object
    EventPayload:
      title: Event object received from slack events api
      description: The event types sent to you are directly tied to the OAuth permission scopes awarded as users install your Slack App.
      discriminator:
        propertyName: type
        mapping:
          app_rate_limited: '#/components/schemas/AppRateLimitedEvent'
          event_callback: '#/components/schemas/EventCallback'
      required:
        - token
        - team_id
        - api_app_id
        - type
      properties:
        token:
          type: string
        team_id:
          type: string
        api_app_id:
          type: string
        type:
          type: string
    AppRateLimitedEvent:
      allOf:
        - $ref: '#/components/schemas/EventPayload'
        - type: object
          required:
            - minute_rate_limited
          properties:
            minute_rate_limited:
              type: integer
              format: int64
    EventCallback:
      allOf:
        - $ref: '#/components/schemas/EventPayload'
        - type: object
          required:
            - event
            - event_id
            - event_time
            - authed_users
          properties:
            event:
              $ref: '#/components/schemas/BaseEvent'
            event_id:
              type: string
            event_time:
              type: integer
              format: int64
            authed_users:
              type: array
              items:
                type: string
    BaseEvent:
      title: BaseEvent object to all slack events
      description: The BaseEvent object used to deserialize all sub-events received from Slack Events Api.
      discriminator:
        propertyName: type
        mapping:
          reaction_added: '#/components/schemas/ReactionAddedEvent'
          app_mention: '#/components/schemas/AppMentionEvent'
          app_uninstalled: '#/components/schemas/AppUninstalledEvent'
          channel_archive: '#/components/schemas/ChannelArchiveEvent'
          channel_created: '#/components/schemas/ChannelCreatedEvent'
          channel_deleted: '#/components/schemas/ChannelDeletedEvent'
          channel_history_changed: '#/components/schemas/ChannelHistoryChangedEvent'
          channel_left: '#/components/schemas/ChannelLeftEvent'
          channel_rename: '#/components/schemas/ChannelRenameEvent'
          channel_unarchive: '#/components/schemas/ChannelUnarchiveEvent'
          dnd_updated: '#/components/schemas/DndUpdatedEvent'
          dnd_updated_user: '#/components/schemas/DndUpdatedUserEvent'
          email_domain_changed: '#/components/schemas/EmailDomainChangedEvent'
      required:
        - type
        - event_ts
        - user
        - ts
      properties:
        event_ts:
          type: string
        user:
          type: string
        ts:
          type: string
        type:
          type: string
    AppMentionEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - text
            - channel
          properties:
            text:
              type: string
            channel:
              type: string
    ReactionAddedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - reaction
            - item_user
            - item
          properties:
            reaction:
              type: string
            item_user:
              type: string
            item:
              $ref: '#/components/schemas/ReactionAddedItem'
    ReactionAddedItem:
      type: object
      properties:
        type:
          type: string
        channel:
          type: string
        ts:
          type: string
    AppUninstalledEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
    ChannelArchiveEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - channel
          properties:
            channel:
              type: string
    ChannelCreatedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - channel
          properties:
            channel:
              $ref: '#/components/schemas/ChannelCreatedItem'
    ChannelCreatedItem:
      type: object
      required:
        - id
        - name
        - created
        - creator
      properties:
        id:
          type: string
        name:
          type: string
        created:
          type: integer
          format: int64
        creator:
          type: string
    ChannelDeletedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - channel
          properties:
            channel:
              type: string
    ChannelHistoryChangedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - latest
          properties:
            latest:
              type: string
    ChannelLeftEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - channel
          properties:
            channel:
              type: string
    ChannelRenameEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - channel
          properties:
            channel:
              $ref: '#/components/schemas/ChannelRenamedItem'
    ChannelRenamedItem:
      type: object
      required:
        - id
        - name
        - created
      properties:
        id:
          type: string
        name:
          type: string
        created:
          type: integer
          format: int64
    ChannelUnarchiveEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - channel
          properties:
            channel:
              type: string
    DndUpdatedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - dnd_status
          properties:
            dnd_status:
              $ref: '#/components/schemas/DndUpdatedItem'
    DndUpdatedItem:
      type: object
      required:
        - dnd_enabled
        - next_dnd_start_ts
        - next_dnd_end_ts
        - snooze_enabled
        - snooze_endtime
      properties:
        dnd_enabled:
          type: boolean
        next_dnd_start_ts:
          type: integer
          format: int64
        next_dnd_end_ts:
          type: integer
          format: int64
        snooze_enabled:
          type: boolean
        snooze_endtime:
          type: integer
          format: int64
    DndUpdatedUserEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - dnd_status
          properties:
            dnd_status:
              $ref: '#/components/schemas/DndUpdatedUserItem'
    DndUpdatedUserItem:
      type: object
      required:
        - dnd_enabled
        - next_dnd_start_ts
        - next_dnd_end_ts
      properties:
        dnd_enabled:
          type: boolean
        next_dnd_start_ts:
          type: integer
          format: int64
        next_dnd_end_ts:
          type: integer
          format: int64
    EmailDomainChangedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - type: object
          required:
            - email_domain
          properties:
            email_domain:
              type: string